DROP TABLE CLIENT CASCADE CONSTRAINTS PURGE;
DROP TABLE PRODUCT CASCADE CONSTRAINTS PURGE;
DROP TABLE PRODUCTION CASCADE CONSTRAINTS PURGE;
DROP TABLE SALE CASCADE CONSTRAINTS PURGE;
DROP TABLE SECTOR CASCADE CONSTRAINTS PURGE;
DROP TABLE TIME CASCADE CONSTRAINTS PURGE;
DROP TABLE HUB CASCADE CONSTRAINTS PURGE;

--STAR MODEL--
CREATE TABLE CLIENT
(
    id INTEGER generated by default as identity,
    fiscal_number INTEGER NOT NULL UNIQUE CHECK (fiscal_number>99999999 AND fiscal_number<1000000000),
    email VARCHAR(100) NOT NULL UNIQUE CHECK (email LIKE '%_@%__%.__%'),
    name VARCHAR(100) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE PRODUCT
(
    id INTEGER generated by default as identity,
    type      VARCHAR2(255) NOT NULL,
    name      VARCHAR2(255) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE PRODUCTION
(
    id INTEGER generated by default as identity,
    time_id       INTEGER NOT NULL,
    sector_id     INTEGER NOT NULL,
    product_id    INTEGER NOT NULL,
    amount        INTEGER NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE SALE
(
    id         INTEGER generated by default as identity,
    time_id    INTEGER NOT NULL,
    client_id  INTEGER NOT NULL,
    product_id INTEGER NOT NULL,
    hub_id     INTEGER NOT NULL,
    quantity   INTEGER NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE SECTOR
(
    id          INTEGER generated by default as identity,
    name        VARCHAR(100) NOT NULL,
    exploration INTEGER NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE TIME
(
    id     INTEGER generated by default as identity,
    year   NUMBER(4, 0)  NOT NULL,
    month  NUMBER(2, 0)  NOT NULL CHECK (month BETWEEN 1 AND 12),
    PRIMARY KEY (id)
);

CREATE TABLE HUB
(
    id INTEGER generated by default as identity,
    hub_name VARCHAR(100) NOT NULL,
    hub_type VARCHAR(100) NOT NULL,
    PRIMARY KEY (id)
);

ALTER TABLE PRODUCTION
    ADD CONSTRAINT FKProductionSectorId FOREIGN KEY (sector_id) REFERENCES SECTOR (id);
ALTER TABLE PRODUCTION
    ADD CONSTRAINT FKProductionProductId FOREIGN KEY (product_id) REFERENCES PRODUCT (id);
ALTER TABLE PRODUCTION
    ADD CONSTRAINT FKProductionTimeId FOREIGN KEY (time_id) REFERENCES TIME (id);


ALTER TABLE SALE
    ADD CONSTRAINT FKSaleClientId FOREIGN KEY (client_id) REFERENCES CLIENT (id);
ALTER TABLE SALE
    ADD CONSTRAINT FKSaleProductId FOREIGN KEY (product_id) REFERENCES PRODUCT (id);
ALTER TABLE SALE
    ADD CONSTRAINT FKSaleTimeId FOREIGN KEY (time_id) REFERENCES TIME (id);
ALTER TABLE SALE
    ADD CONSTRAINT FKSaleHubId FOREIGN KEY (hub_id) REFERENCES HUB (id);

BEGIN
    FOR yearCounter IN 2017..2022
        LOOP
            FOR monthCounter IN 1..12
                LOOP
                    INSERT INTO TIME(YEAR, MONTH) VALUES (yearCounter, monthCounter);
                end loop;
        end loop;
    COMMIT;

    INSERT INTO PRODUCT(TYPE, NAME) VALUES ('Permanent', 'Apple');
    INSERT INTO PRODUCT(TYPE, NAME) VALUES ('Permanent', 'Pear');
    INSERT INTO PRODUCT(TYPE, NAME) VALUES ('Permanent', 'Banana');
    INSERT INTO PRODUCT(TYPE, NAME) VALUES ('Permanent', 'Pineapple');
    INSERT INTO PRODUCT(TYPE, NAME) VALUES ('Temporary', 'Tomato');
    INSERT INTO PRODUCT(TYPE, NAME) VALUES ('Temporary', 'Potato');
    INSERT INTO PRODUCT(TYPE, NAME) VALUES ('Temporary', 'Strawberry');
    INSERT INTO PRODUCT(TYPE, NAME) VALUES ('Temporary', 'Orange');
    COMMIT;

    INSERT INTO CLIENT(FISCAL_NUMBER, EMAIL, NAME) VALUES (899435163, 'diogo@gmail.com', 'Diogo');
    INSERT INTO CLIENT(FISCAL_NUMBER, EMAIL, NAME) VALUES (324513239, 'joao@gmail.com', 'Joao');
    INSERT INTO CLIENT(FISCAL_NUMBER, EMAIL, NAME) VALUES (783127900, 'pedro@gmail.com', 'Pedro');
    COMMIT;

    INSERT INTO SECTOR(name, exploration) VALUES ('Tomato Field', 1);
    INSERT INTO SECTOR(name, exploration) VALUES ('Tomato Field', 2);
    INSERT INTO SECTOR(name, exploration) VALUES ('Orange Field', 1);
    INSERT INTO SECTOR(name, exploration) VALUES ('Orange Field', 2);
    INSERT INTO SECTOR(name, exploration) VALUES ('Potato Field', 1);
    INSERT INTO SECTOR(name, exploration) VALUES ('Potato Field', 2);
    INSERT INTO SECTOR(name, exploration) VALUES ('Strawberry Field', 1);
    INSERT INTO SECTOR(name, exploration) VALUES ('Strawberry Field', 2);
    COMMIT;

    INSERT INTO SECTOR(name, exploration) VALUES ('Apple Orchard', 1);
    INSERT INTO SECTOR(name, exploration) VALUES ('Apple Orchard', 2);
    INSERT INTO SECTOR(name, exploration) VALUES ('Pear Orchard', 1);
    INSERT INTO SECTOR(name, exploration) VALUES ('Pear Orchard', 2);
    INSERT INTO SECTOR(name, exploration) VALUES ('Banana Orchard', 1);
    INSERT INTO SECTOR(name, exploration) VALUES ('Banana Orchard', 2);
    INSERT INTO SECTOR(name, exploration) VALUES ('Pineapple Field', 1);
    INSERT INTO SECTOR(name, exploration) VALUES ('Pineapple Field', 2);

    INSERT INTO HUB(hub_name, hub_type) VALUES ('Porto HUB', 'P');
    INSERT INTO HUB(hub_name, hub_type) VALUES ('Lisboa HUB', 'E');
    INSERT INTO HUB(hub_name, hub_type) VALUES ('Coimbra HUB', 'C');
    INSERT INTO HUB(hub_name, hub_type) VALUES ('Braga HUB', 'P');
    INSERT INTO HUB(hub_name, hub_type) VALUES ('Faro HUB', 'E');
    INSERT INTO HUB(hub_name, hub_type) VALUES ('Aveiro HUB', 'C');
    COMMIT;

    FOR clientCounter IN 1..3
        LOOP
            FOR timeCounter IN 1..72
                LOOP
                    FOR productCounter IN 1..8
                        LOOP
                            FOR hubCounter IN 1..5
                            LOOP
                                INSERT INTO SALE(time_id, client_id, product_id, hub_id, quantity)
                                VALUES (timeCounter, clientCounter, productCounter, hubCounter, ROUND(DBMS_RANDOM.VALUE(1, 100000)));
                            end loop;
                        end loop;
                end loop;
        end loop;
    COMMIT;

    FOR sectorCounter IN 1..14
        LOOP
            FOR timeCounter IN 1..72
                LOOP
                    FOR productCounter IN 1..8
                        LOOP
                            INSERT INTO PRODUCTION(time_id, sector_id, product_id, amount)
                            VALUES (timeCounter, sectorCounter, productCounter, ROUND(DBMS_RANDOM.VALUE(1, 100000)));
                            COMMIT;
                        end loop;
                end loop;
        end loop;
END;