<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1269px" preserveAspectRatio="none" style="width:1599px;height:1269px;background:#FFFFFF;" version="1.1" viewBox="0 0 1599 1269" width="1599px" zoomAndPan="magnify"><defs/><g><rect fill="#FFFFFF" height="1089.2266" style="stroke:#181818;stroke-width:1.0;" width="10" x="57.5" y="90.6406"/><rect fill="#FFFFFF" height="28.5234" style="stroke:#181818;stroke-width:1.0;" width="10" x="335.5" y="111.1641"/><rect fill="#FFFFFF" height="982.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="335.5" y="168.2109"/><rect fill="#FFFFFF" height="983.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="594.5" y="196.7344"/><rect fill="#FFFFFF" height="518.8047" style="stroke:#181818;stroke-width:1.0;" width="10" x="599.5" y="430.3984"/><rect fill="#FFFFFF" height="283.6641" style="stroke:#181818;stroke-width:1.0;" width="10" x="604.5" y="560.4922"/><rect fill="#FFFFFF" height="28.5234" style="stroke:#181818;stroke-width:1.0;" width="10" x="1216.5" y="323.8281"/><rect fill="#FFFFFF" height="28.5234" style="stroke:#181818;stroke-width:1.0;" width="10" x="1289.5" y="266.7813"/><rect fill="#FFFFFF" height="30" style="stroke:#181818;stroke-width:1.0;" width="10" x="1359" y="677.0625"/><rect fill="#FFFFFF" height="28.5234" style="stroke:#181818;stroke-width:1.0;" width="10" x="1539.5" y="295.3047"/><rect fill="none" height="426.7578" style="stroke:#000000;stroke-width:1.5;" width="919" x="493" y="515.4453"/><rect fill="none" height="88.5703" style="stroke:#000000;stroke-width:1.5;" width="381.5" x="503" y="722.0625"/><rect fill="none" height="58.0469" style="stroke:#000000;stroke-width:1.5;" width="361.5" x="513" y="745.5859"/><rect fill="none" height="45.0469" style="stroke:#000000;stroke-width:1.5;" width="407" x="279" y="997.7266"/><rect fill="none" height="86.5703" style="stroke:#000000;stroke-width:1.5;" width="739.5" x="279" y="1056.7734"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="62" x2="62" y1="80.6406" y2="1188.8672"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="340" x2="340" y1="80.6406" y2="1188.8672"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="599" x2="599" y1="80.6406" y2="1188.8672"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="1145" x2="1145" y1="80.6406" y2="1188.8672"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="1221" x2="1221" y1="80.6406" y2="1188.8672"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="1294" x2="1294" y1="80.6406" y2="1188.8672"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="1364" x2="1364" y1="80.6406" y2="1188.8672"/><line style="stroke:#181818;stroke-width:0.5;stroke-dasharray:5.0,5.0;" x1="1544.5" x2="1544.5" y1="80.6406" y2="1188.8672"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="20" y="77.6738">System User</text><ellipse cx="62.5" cy="13.5" fill="#E2E2F0" rx="8" ry="8" style="stroke:#181818;stroke-width:0.5;"/><path d="M62.5,21.5 L62.5,48.5 M49.5,29.5 L75.5,29.5 M62.5,48.5 L49.5,63.5 M62.5,48.5 L75.5,63.5 " fill="none" style="stroke:#181818;stroke-width:0.5;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="20" y="1200.541">System User</text><ellipse cx="62.5" cy="1212.0078" fill="#E2E2F0" rx="8" ry="8" style="stroke:#181818;stroke-width:0.5;"/><path d="M62.5,1220.0078 L62.5,1247.0078 M49.5,1228.0078 L75.5,1228.0078 M62.5,1247.0078 L49.5,1262.0078 M62.5,1247.0078 L75.5,1262.0078 " fill="none" style="stroke:#181818;stroke-width:0.5;"/><rect fill="#E2E2F0" height="29.6406" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="103" x="289" y="50"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="296" y="69.6738">:DefineHubsUi</text><rect fill="#E2E2F0" height="29.6406" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="103" x="289" y="1187.8672"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="296" y="1207.541">:DefineHubsUi</text><rect fill="#E2E2F0" height="29.6406" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="153" x="523" y="50"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="530" y="69.6738">:DefineHubsController</text><rect fill="#E2E2F0" height="29.6406" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="153" x="523" y="1187.8672"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="139" x="530" y="1207.541">:DefineHubsController</text><rect fill="#E2E2F0" height="29.6406" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="49" x="1121" y="50"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="35" x="1128" y="69.6738">Entity</text><rect fill="#E2E2F0" height="29.6406" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="49" x="1121" y="1187.8672"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="35" x="1128" y="1207.541">Entity</text><rect fill="#E2E2F0" height="29.6406" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="83" x="1180" y="50"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="69" x="1187" y="69.6738">EntityStore</text><rect fill="#E2E2F0" height="29.6406" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="83" x="1180" y="1187.8672"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="69" x="1187" y="1207.541">EntityStore</text><rect fill="#E2E2F0" height="29.6406" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="43" x="1273" y="50"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="29" x="1280" y="69.6738">:App</text><rect fill="#E2E2F0" height="29.6406" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="43" x="1273" y="1187.8672"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="29" x="1280" y="1207.541">:App</text><rect fill="#E2E2F0" height="29.6406" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="76" x="1326" y="50"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="62" x="1333" y="69.6738">:Algoritms</text><rect fill="#E2E2F0" height="29.6406" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="76" x="1326" y="1187.8672"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="62" x="1333" y="1207.541">:Algoritms</text><rect fill="#E2E2F0" height="29.6406" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="98" x="1495.5" y="50"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="1502.5" y="69.6738">:Organization</text><rect fill="#E2E2F0" height="29.6406" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="98" x="1495.5" y="1187.8672"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="1502.5" y="1207.541">:Organization</text><rect fill="#FFFFFF" height="1089.2266" style="stroke:#181818;stroke-width:1.0;" width="10" x="57.5" y="90.6406"/><rect fill="#FFFFFF" height="28.5234" style="stroke:#181818;stroke-width:1.0;" width="10" x="335.5" y="111.1641"/><rect fill="#FFFFFF" height="982.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="335.5" y="168.2109"/><rect fill="#FFFFFF" height="983.1328" style="stroke:#181818;stroke-width:1.0;" width="10" x="594.5" y="196.7344"/><rect fill="#FFFFFF" height="518.8047" style="stroke:#181818;stroke-width:1.0;" width="10" x="599.5" y="430.3984"/><rect fill="#FFFFFF" height="283.6641" style="stroke:#181818;stroke-width:1.0;" width="10" x="604.5" y="560.4922"/><rect fill="#FFFFFF" height="28.5234" style="stroke:#181818;stroke-width:1.0;" width="10" x="1216.5" y="323.8281"/><rect fill="#FFFFFF" height="28.5234" style="stroke:#181818;stroke-width:1.0;" width="10" x="1289.5" y="266.7813"/><rect fill="#FFFFFF" height="30" style="stroke:#181818;stroke-width:1.0;" width="10" x="1359" y="677.0625"/><rect fill="#FFFFFF" height="28.5234" style="stroke:#181818;stroke-width:1.0;" width="10" x="1539.5" y="295.3047"/><polygon fill="#181818" points="323.5,107.1641,333.5,111.1641,323.5,115.1641,327.5,111.1641" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="67.5" x2="329.5" y1="111.1641" y2="111.1641"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="7" x="74.5" y="106.4092">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="135" x="85.5" y="106.4092">requests to define hubs</text><polygon fill="#181818" points="78.5,135.6875,68.5,139.6875,78.5,143.6875,74.5,139.6875" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="72.5" x2="339.5" y1="139.6875" y2="139.6875"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="7" x="84.5" y="134.9326">2</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="233" x="95.5" y="134.9326">requests data (number of hubs to define)</text><polygon fill="#181818" points="323.5,164.2109,333.5,168.2109,323.5,172.2109,327.5,168.2109" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="67.5" x2="329.5" y1="168.2109" y2="168.2109"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="7" x="74.5" y="163.4561">3</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="125" x="85.5" y="163.4561">inputs requested data</text><polygon fill="#181818" points="582.5,192.7344,592.5,196.7344,582.5,200.7344,586.5,196.7344" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="345.5" x2="588.5" y1="196.7344" y2="196.7344"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="7" x="352.5" y="191.9795">4</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="158" x="363.5" y="191.9795">defineHubs(numberOfHubs)</text><line style="stroke:#181818;stroke-width:1.0;" x1="604.5" x2="646.5" y1="225.2578" y2="225.2578"/><line style="stroke:#181818;stroke-width:1.0;" x1="646.5" x2="646.5" y1="225.2578" y2="238.2578"/><line style="stroke:#181818;stroke-width:1.0;" x1="605.5" x2="646.5" y1="238.2578" y2="238.2578"/><polygon fill="#181818" points="615.5,234.2578,605.5,238.2578,615.5,242.2578,611.5,238.2578" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="7" x="611.5" y="220.5029">5</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="199" x="622.5" y="220.5029">getCompanyAverageDistanceList()</text><polygon fill="#181818" points="1277.5,262.7813,1287.5,266.7813,1277.5,270.7813,1281.5,266.7813" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="604.5" x2="1283.5" y1="266.7813" y2="266.7813"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="7" x="611.5" y="262.0264">6</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="139" x="622.5" y="262.0264">app = App.getInstance()</text><polygon fill="#181818" points="1527.5,291.3047,1537.5,295.3047,1527.5,299.3047,1531.5,295.3047" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1294.5" x2="1533.5" y1="295.3047" y2="295.3047"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="7" x="1301.5" y="290.5498">7</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="210" x="1312.5" y="290.5498">organization = app.getOrganization()</text><polygon fill="#181818" points="1237.5,319.8281,1227.5,323.8281,1237.5,327.8281,1233.5,323.8281" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="1231.5" x2="1543.5" y1="323.8281" y2="323.8281"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="7" x="1243.5" y="319.0732">8</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="244" x="1254.5" y="319.0732">entityStore = organization.getEntityStore()</text><polygon fill="#181818" points="615.5,348.3516,605.5,352.3516,615.5,356.3516,611.5,352.3516" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="609.5" x2="1220.5" y1="352.3516" y2="352.3516"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="7" x="621.5" y="347.5967">9</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="248" x="632.5" y="347.5967">MapGraph = entityStore.getEntitiesGraph()</text><line style="stroke:#181818;stroke-width:1.0;" x1="604.5" x2="646.5" y1="380.875" y2="380.875"/><line style="stroke:#181818;stroke-width:1.0;" x1="646.5" x2="646.5" y1="380.875" y2="393.875"/><line style="stroke:#181818;stroke-width:1.0;" x1="605.5" x2="646.5" y1="393.875" y2="393.875"/><polygon fill="#181818" points="615.5,389.875,605.5,393.875,615.5,397.875,611.5,393.875" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="14" x="611.5" y="376.1201">10</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="158" x="629.5" y="376.1201">defineHubs(numberOfHubs)</text><line style="stroke:#181818;stroke-width:1.0;" x1="604.5" x2="651.5" y1="417.3984" y2="417.3984"/><line style="stroke:#181818;stroke-width:1.0;" x1="651.5" x2="651.5" y1="417.3984" y2="430.3984"/><line style="stroke:#181818;stroke-width:1.0;" x1="610.5" x2="651.5" y1="430.3984" y2="430.3984"/><polygon fill="#181818" points="620.5,426.3984,610.5,430.3984,620.5,434.3984,616.5,430.3984" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="14" x="616.5" y="412.6436">11</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="199" x="634.5" y="412.6436">getCompanyAverageDistanceList()</text><line style="stroke:#181818;stroke-width:1.0;" x1="609.5" x2="651.5" y1="463.9219" y2="463.9219"/><line style="stroke:#181818;stroke-width:1.0;" x1="651.5" x2="651.5" y1="463.9219" y2="476.9219"/><line style="stroke:#181818;stroke-width:1.0;" x1="610.5" x2="651.5" y1="476.9219" y2="476.9219"/><polygon fill="#181818" points="620.5,472.9219,610.5,476.9219,620.5,480.9219,616.5,476.9219" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="14" x="616.5" y="459.167">12</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="472" x="634.5" y="459.167">List&lt;Pair&lt;Company, Integer&gt;&gt; companyAverageDistanceList = new ArrayList&lt;&gt;()</text><path d="M493,515.4453 L554,515.4453 L554,521.9688 L544,531.9688 L493,531.9688 L493,515.4453 " fill="#EEEEEE" style="stroke:#000000;stroke-width:1.5;"/><rect fill="none" height="426.7578" style="stroke:#000000;stroke-width:1.5;" width="919" x="493" y="515.4453"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="16" x="508" y="528.2139">alt</text><text fill="#000000" font-family="sans-serif" font-size="11" font-weight="bold" lengthAdjust="spacing" textLength="163" x="569" y="527.4033">[(entity instanceof Company)]</text><line style="stroke:#181818;stroke-width:1.0;" x1="609.5" x2="656.5" y1="547.4922" y2="547.4922"/><line style="stroke:#181818;stroke-width:1.0;" x1="656.5" x2="656.5" y1="547.4922" y2="560.4922"/><line style="stroke:#181818;stroke-width:1.0;" x1="615.5" x2="656.5" y1="560.4922" y2="560.4922"/><polygon fill="#181818" points="625.5,556.4922,615.5,560.4922,625.5,564.4922,621.5,560.4922" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="14" x="621.5" y="542.7373">13</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="345" x="639.5" y="542.7373">getAverageProximityDistanceOfCompany((Company) entity)</text><line style="stroke:#181818;stroke-width:1.0;" x1="614.5" x2="656.5" y1="594.0156" y2="594.0156"/><line style="stroke:#181818;stroke-width:1.0;" x1="656.5" x2="656.5" y1="594.0156" y2="607.0156"/><line style="stroke:#181818;stroke-width:1.0;" x1="615.5" x2="656.5" y1="607.0156" y2="607.0156"/><polygon fill="#181818" points="625.5,603.0156,615.5,607.0156,625.5,611.0156,621.5,607.0156" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="14" x="621.5" y="589.2607">14</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="332" x="639.5" y="589.2607">ArrayList&lt;LinkedList&lt;Entity&gt;&gt; paths = new ArrayList&lt;&gt;()</text><line style="stroke:#181818;stroke-width:1.0;" x1="614.5" x2="656.5" y1="635.5391" y2="635.5391"/><line style="stroke:#181818;stroke-width:1.0;" x1="656.5" x2="656.5" y1="635.5391" y2="648.5391"/><line style="stroke:#181818;stroke-width:1.0;" x1="615.5" x2="656.5" y1="648.5391" y2="648.5391"/><polygon fill="#181818" points="625.5,644.5391,615.5,648.5391,625.5,652.5391,621.5,648.5391" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="14" x="621.5" y="630.7842">15</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="320" x="639.5" y="630.7842">ArrayList&lt;Integer&gt; pathsDistances = new ArrayList&lt;&gt;()</text><polygon fill="#181818" points="1347,673.0625,1357,677.0625,1347,681.0625,1351,677.0625" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="614.5" x2="1353" y1="677.0625" y2="677.0625"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="14" x="621.5" y="672.3076">16</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="565" x="639.5" y="672.3076">shortestPaths(entityGraph, company, Integer::compareTo, Integer::sum,0, paths, pathsDistances)</text><path d="M503,722.0625 L576,722.0625 L576,728.5859 L566,738.5859 L503,738.5859 L503,722.0625 " fill="#EEEEEE" style="stroke:#000000;stroke-width:1.5;"/><rect fill="none" height="88.5703" style="stroke:#000000;stroke-width:1.5;" width="381.5" x="503" y="722.0625"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="28" x="518" y="734.8311">loop</text><text fill="#000000" font-family="sans-serif" font-size="11" font-weight="bold" lengthAdjust="spacing" textLength="180" x="591" y="734.0205">[for (int i = 0; i &lt; paths.size(); i++)]</text><path d="M513,745.5859 L574,745.5859 L574,752.1094 L564,762.1094 L513,762.1094 L513,745.5859 " fill="#EEEEEE" style="stroke:#000000;stroke-width:1.5;"/><rect fill="none" height="58.0469" style="stroke:#000000;stroke-width:1.5;" width="361.5" x="513" y="745.5859"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="16" x="528" y="758.3545">alt</text><text fill="#000000" font-family="sans-serif" font-size="11" font-weight="bold" lengthAdjust="spacing" textLength="241" x="589" y="757.5439">[(!(paths.get(i).getLast().equals(company)))]</text><line style="stroke:#181818;stroke-width:1.0;" x1="614.5" x2="656.5" y1="782.6328" y2="782.6328"/><line style="stroke:#181818;stroke-width:1.0;" x1="656.5" x2="656.5" y1="782.6328" y2="795.6328"/><line style="stroke:#181818;stroke-width:1.0;" x1="615.5" x2="656.5" y1="795.6328" y2="795.6328"/><polygon fill="#181818" points="625.5,791.6328,615.5,795.6328,625.5,799.6328,621.5,795.6328" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="14" x="621.5" y="777.8779">17</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="223" x="639.5" y="777.8779">totalDistance += pathsDistances.get(i)</text><line style="stroke:#181818;stroke-width:1.0;" x1="614.5" x2="656.5" y1="843.1563" y2="843.1563"/><line style="stroke:#181818;stroke-width:1.0;" x1="656.5" x2="656.5" y1="843.1563" y2="856.1563"/><line style="stroke:#181818;stroke-width:1.0;" x1="609.5" x2="656.5" y1="856.1563" y2="856.1563"/><polygon fill="#181818" points="619.5,852.1563,609.5,856.1563,619.5,860.1563,615.5,856.1563" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="14" x="621.5" y="838.4014">18</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="95" x="639.5" y="838.4014">averageDistance</text><line style="stroke:#181818;stroke-width:1.0;" x1="609.5" x2="651.5" y1="879.6797" y2="879.6797"/><line style="stroke:#181818;stroke-width:1.0;" x1="651.5" x2="651.5" y1="879.6797" y2="892.6797"/><line style="stroke:#181818;stroke-width:1.0;" x1="610.5" x2="651.5" y1="892.6797" y2="892.6797"/><polygon fill="#181818" points="620.5,888.6797,610.5,892.6797,620.5,896.6797,616.5,892.6797" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="14" x="616.5" y="874.9248">19</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="480" x="634.5" y="874.9248">companyAverageDistanceList.add(new Pair&lt;&gt;((Company) entity, averageDistance))</text><line style="stroke:#181818;stroke-width:1.0;" x1="609.5" x2="651.5" y1="921.2031" y2="921.2031"/><line style="stroke:#181818;stroke-width:1.0;" x1="651.5" x2="651.5" y1="921.2031" y2="934.2031"/><line style="stroke:#181818;stroke-width:1.0;" x1="610.5" x2="651.5" y1="934.2031" y2="934.2031"/><polygon fill="#181818" points="620.5,930.2031,610.5,934.2031,620.5,938.2031,616.5,934.2031" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="14" x="616.5" y="916.4482">20</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="171" x="634.5" y="916.4482">companyAverageDistanceList</text><line style="stroke:#181818;stroke-width:1.0;" x1="604.5" x2="646.5" y1="969.7266" y2="969.7266"/><line style="stroke:#181818;stroke-width:1.0;" x1="646.5" x2="646.5" y1="969.7266" y2="982.7266"/><line style="stroke:#181818;stroke-width:1.0;" x1="605.5" x2="646.5" y1="982.7266" y2="982.7266"/><polygon fill="#181818" points="615.5,978.7266,605.5,982.7266,615.5,986.7266,611.5,982.7266" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="14" x="611.5" y="964.9717">21</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="504" x="629.5" y="964.9717">Collections.sort(companyAverageDistanceList, Comparator.comparing(p -&gt; p.second()))</text><path d="M279,997.7266 L340,997.7266 L340,1004.25 L330,1014.25 L279,1014.25 L279,997.7266 " fill="#EEEEEE" style="stroke:#000000;stroke-width:1.5;"/><rect fill="none" height="45.0469" style="stroke:#000000;stroke-width:1.5;" width="407" x="279" y="997.7266"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="16" x="294" y="1010.4951">alt</text><text fill="#000000" font-family="sans-serif" font-size="11" font-weight="bold" lengthAdjust="spacing" textLength="310" x="355" y="1009.6846">[(numberOfHubs &gt; companyAverageDistanceList.size())]</text><polygon fill="#181818" points="356.5,1030.7734,346.5,1034.7734,356.5,1038.7734,352.5,1034.7734" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="350.5" x2="593.5" y1="1034.7734" y2="1034.7734"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="14" x="362.5" y="1030.0186">22</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="207" x="380.5" y="1030.0186">companyAverageDistanceList.size()</text><path d="M279,1056.7734 L352,1056.7734 L352,1063.2969 L342,1073.2969 L279,1073.2969 L279,1056.7734 " fill="#EEEEEE" style="stroke:#000000;stroke-width:1.5;"/><rect fill="none" height="86.5703" style="stroke:#000000;stroke-width:1.5;" width="739.5" x="279" y="1056.7734"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="28" x="294" y="1069.542">loop</text><text fill="#000000" font-family="sans-serif" font-size="11" font-weight="bold" lengthAdjust="spacing" textLength="180" x="367" y="1068.7314">[(int i = 0; i &lt; numberOfHubs; i++)]</text><line style="stroke:#181818;stroke-width:1.0;" x1="604.5" x2="646.5" y1="1093.8203" y2="1093.8203"/><line style="stroke:#181818;stroke-width:1.0;" x1="646.5" x2="646.5" y1="1093.8203" y2="1106.8203"/><line style="stroke:#181818;stroke-width:1.0;" x1="605.5" x2="646.5" y1="1106.8203" y2="1106.8203"/><polygon fill="#181818" points="615.5,1102.8203,605.5,1106.8203,615.5,1110.8203,611.5,1106.8203" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="14" x="611.5" y="1089.0654">23</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="377" x="629.5" y="1089.0654">companyAverageDistanceList.get(i).first().setDistributionHub(true)</text><polygon fill="#181818" points="356.5,1131.3438,346.5,1135.3438,356.5,1139.3438,352.5,1135.3438" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;" x1="350.5" x2="593.5" y1="1135.3438" y2="1135.3438"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="14" x="362.5" y="1130.5889">24</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="32" x="380.5" y="1130.5889">result</text><polygon fill="#181818" points="78.5,1166.8672,68.5,1170.8672,78.5,1174.8672,74.5,1170.8672" style="stroke:#181818;stroke-width:1.0;"/><line style="stroke:#181818;stroke-width:1.0;stroke-dasharray:2.0,2.0;" x1="72.5" x2="339.5" y1="1170.8672" y2="1170.8672"/><text fill="#000000" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="14" x="84.5" y="1166.1123">25</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="152" x="102.5" y="1166.1123">informs operation success</text><!--MD5=[1b2e12b65ceae378992de0089ea3212f]
@startuml
'https://plantuml.com/sequence-diagram

autonumber

actor user as "System User"

participant ":DefineHubsUi" as ui
participant ":DefineHubsController" as controller
participant "Entity" as entity
participant "EntityStore" as store
participant ":Organization" as organization
participant ":App" as app
participant ":Algoritms" as Alg
participant ":Organization" as organization



activate user

user -> ui : requests to define hubs
activate ui
"ui" - -> user : requests data (number of hubs to define)
deactivate ui
user -> ui : inputs requested data
activate ui
ui -> controller : defineHubs(numberOfHubs)
activate controller
controller -> controller : getCompanyAverageDistanceList()
controller -> app : app = App.getInstance()
activate app
app -> organization : organization = app.getOrganization()
deactivate app
activate organization
organization -> store : entityStore = organization.getEntityStore()
deactivate organization
activate store
store -> controller : MapGraph = entityStore.getEntitiesGraph()
deactivate store
controller -> controller : defineHubs(numberOfHubs)
controller -> controller : getCompanyAverageDistanceList()
activate controller
controller -> controller : List<Pair<Company, Integer>> companyAverageDistanceList = new ArrayList<>()
loop for (Entity entity : entityStore.getEntitiesGraph().vertices())
    alt (entity instanceof Company)
    controller -> controller : getAverageProximityDistanceOfCompany((Company) entity)
    activate controller
    controller -> controller : ArrayList<LinkedList<Entity>> paths = new ArrayList<>()
    controller -> controller : ArrayList<Integer> pathsDistances = new ArrayList<>()
    controller -> Alg : shortestPaths(entityGraph, company, Integer::compareTo, Integer::sum,0, paths, pathsDistances)
    activate Alg
    deactivate Alg
        loop for (int i = 0; i < paths.size(); i++)
            alt (!(paths.get(i).getLast().equals(company)))
            controller -> controller : totalDistance += pathsDistances.get(i)
            end
        end loop
    controller -> controller : averageDistance
    deactivate controller
    controller -> controller : companyAverageDistanceList.add(new Pair<>((Company) entity, averageDistance))
    controller -> controller : companyAverageDistanceList
end loop
deactivate controller
controller -> controller : Collections.sort(companyAverageDistanceList, Comparator.comparing(p -> p.second()))
alt (numberOfHubs > companyAverageDistanceList.size())
    controller -> ui : companyAverageDistanceList.size()
end

loop (int i = 0; i < numberOfHubs; i++)
    controller -> controller : companyAverageDistanceList.get(i).first().setDistributionHub(true)
    controller -> ui : result
end loop
deactivate ui
ui - -> user : informs operation success






@enduml

@startuml

autonumber

actor user as "System User"

participant ":DefineHubsUi" as ui
participant ":DefineHubsController" as controller
participant "Entity" as entity
participant "EntityStore" as store
participant ":Organization" as organization
participant ":App" as app
participant ":Algoritms" as Alg
participant ":Organization" as organization



activate user

user -> ui : requests to define hubs
activate ui
"ui" - -> user : requests data (number of hubs to define)
deactivate ui
user -> ui : inputs requested data
activate ui
ui -> controller : defineHubs(numberOfHubs)
activate controller
controller -> controller : getCompanyAverageDistanceList()
controller -> app : app = App.getInstance()
activate app
app -> organization : organization = app.getOrganization()
deactivate app
activate organization
organization -> store : entityStore = organization.getEntityStore()
deactivate organization
activate store
store -> controller : MapGraph = entityStore.getEntitiesGraph()
deactivate store
controller -> controller : defineHubs(numberOfHubs)
controller -> controller : getCompanyAverageDistanceList()
activate controller
controller -> controller : List<Pair<Company, Integer>> companyAverageDistanceList = new ArrayList<>()
loop for (Entity entity : entityStore.getEntitiesGraph().vertices())
    alt (entity instanceof Company)
    controller -> controller : getAverageProximityDistanceOfCompany((Company) entity)
    activate controller
    controller -> controller : ArrayList<LinkedList<Entity>> paths = new ArrayList<>()
    controller -> controller : ArrayList<Integer> pathsDistances = new ArrayList<>()
    controller -> Alg : shortestPaths(entityGraph, company, Integer::compareTo, Integer::sum,0, paths, pathsDistances)
    activate Alg
    deactivate Alg
        loop for (int i = 0; i < paths.size(); i++)
            alt (!(paths.get(i).getLast().equals(company)))
            controller -> controller : totalDistance += pathsDistances.get(i)
            end
        end loop
    controller -> controller : averageDistance
    deactivate controller
    controller -> controller : companyAverageDistanceList.add(new Pair<>((Company) entity, averageDistance))
    controller -> controller : companyAverageDistanceList
end loop
deactivate controller
controller -> controller : Collections.sort(companyAverageDistanceList, Comparator.comparing(p -> p.second()))
alt (numberOfHubs > companyAverageDistanceList.size())
    controller -> ui : companyAverageDistanceList.size()
end

loop (int i = 0; i < numberOfHubs; i++)
    controller -> controller : companyAverageDistanceList.get(i).first().setDistributionHub(true)
    controller -> ui : result
end loop
deactivate ui
ui - -> user : informs operation success






@enduml

PlantUML version 1.2022.12(Sun Oct 23 19:12:26 WEST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: Cp1252
Language: pt
Country: PT
--></g></svg>